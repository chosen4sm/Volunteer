rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.admin == true;
    }
    
    // User profiles
    match /profiles/{userId} {
      // Users can read their own profile
      allow read: if request.auth != null && request.auth.uid == userId;
      
      // Users can create their own profile (with admin: false only)
      allow create: if request.auth != null && 
                      request.auth.uid == userId &&
                      request.resource.data.admin == false;
      
      // Only admins can update or delete profiles
      allow update, delete: if isAdmin();
    }
    
    // Public volunteer form submissions
    match /volunteers/{volunteerId} {
      // Anyone can create a volunteer submission (accepts both 'shifts' and 'availability')
      allow create: if (
        request.resource.data.keys().hasAll(['name', 'phone', 'email', 'team', 'submittedAt']) &&
        request.resource.data.name is string && request.resource.data.name.size() > 0 &&
        request.resource.data.phone is string && request.resource.data.phone.size() > 0 &&
        request.resource.data.email is string && request.resource.data.email.size() > 0 &&
        request.resource.data.team is string && request.resource.data.team.size() > 0 &&
        (request.resource.data.keys().hasAny(['shifts', 'availability'])) &&
        request.resource.data.submittedAt is timestamp
      );
      
      // Anyone can read volunteers (needed to check if email exists)
      allow read: if true;
      
      // Anyone can update their own volunteer record (but can't change email)
      allow update: if request.resource.data.email == resource.data.email &&
                      request.resource.data.name is string && request.resource.data.name.size() > 0 &&
                      request.resource.data.phone is string && request.resource.data.phone.size() > 0 &&
                      request.resource.data.team is string && request.resource.data.team.size() > 0;
      
      // Only admins can delete volunteers
      allow delete: if isAdmin();
    }
    
    // Locations (categories)
    match /locations/{locationId} {
      // Only admins can manage locations
      allow read, create, update, delete: if isAdmin();
    }
    
    // Tasks (sub-categories under locations)
    match /tasks/{taskId} {
      // Only admins can manage tasks
      allow read, create, update, delete: if isAdmin();
    }
    
    // Assignments (manual volunteer-to-task assignments)
    match /assignments/{assignmentId} {
      // Only admins can manage assignments
      allow read, create, update, delete: if isAdmin();
    }
  }
}